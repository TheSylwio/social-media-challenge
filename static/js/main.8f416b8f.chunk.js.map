{"version":3,"sources":["assets/icon-facebook.svg","assets/icon-twitter.svg","assets/icon-instagram.svg","assets/icon-youtube.svg","assets/icon-down.svg","assets/icon-up.svg","components/Banner.js","components/Card.js","components/SmallCard.js","components/CardRow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","className","htmlFor","id","type","Card","props","icon","IconFacebook","IconTwitter","IconInstagram","IconYoutube","getSocialMediaStyle","src","alt","username","number","description","isSuccess","IconUp","IconDown","difference","SmallCard","title","CardRow","header","smallCards","cards","map","card","index","key","App","bigCards","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,uOCqB5BC,MAlBf,WACE,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,yBAAd,0BACA,wBAAIA,UAAU,2BAAd,4BAEF,6BACA,yBAAKA,UAAU,kBACb,2BAAOC,QAAQ,kBAAf,aACA,yBAAKD,UAAU,mBACb,2BAAOE,GAAG,iBAAiBF,UAAU,iBAAiBG,KAAK,iB,sGC2BtDC,MAhCf,SAAcC,GAcZ,OACE,yBAAKL,UAAS,eAdY,WAC1B,OAAQK,EAAMC,MACZ,KAAKC,IACH,MAAO,iBACT,KAAKC,IACH,MAAO,gBACT,KAAKC,IACH,MAAO,mBACT,KAAKC,IACH,MAAO,iBAKaC,KACtB,yBAAKX,UAAU,eACb,yBAAKY,IAAKP,EAAMC,KAAMO,IAAI,KAC1B,8BAAOR,EAAMS,WAEf,yBAAKd,UAAU,iBACb,0BAAMA,UAAU,mBAAmBK,EAAMU,QACzC,0BAAMf,UAAU,wBAAwBK,EAAMW,cAEhD,yBAAKhB,UAAU,eACb,yBAAKY,IAAKP,EAAMY,UAAYC,IAASC,IAAUN,IAAI,KACnD,0BAAMb,UAAWK,EAAMY,UAAY,uBAAyB,wBAAyBZ,EAAMe,e,MCZpFC,MAlBf,SAAmBhB,GACjB,OACE,yBAAKL,UAAU,oBACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,eAAeK,EAAMiB,OACrC,yBAAKV,IAAKP,EAAMC,KAAMO,IAAI,MAE5B,yBAAKb,UAAU,aACb,0BAAMA,UAAU,gBAAgBK,EAAMU,QACtC,yBAAKf,UAAU,qBACb,yBAAKY,IAAKP,EAAMY,UAAYC,IAASC,IAAUN,IAAI,KACnD,0BAAMb,UAAWK,EAAMY,UAAY,uBAAyB,wBAAyBZ,EAAMe,gB,MCkBtFG,MA7Bf,SAAiBlB,GACf,OACE,yBAAKL,UAAU,WACb,4BAAQA,UAAU,mBAAmBK,EAAMmB,QAC1CnB,EAAMoB,WAAapB,EAAMqB,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAChC,kBAAC,EAAD,CACEC,IAAKD,EACLvB,KAAMsB,EAAKtB,KACXgB,MAAOM,EAAKN,MACZP,OAAQa,EAAKb,OACbK,WAAYQ,EAAKR,WACjBH,UAAWW,EAAKX,eAGpBZ,EAAMqB,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACd,kBAAC,EAAD,CACEC,IAAKD,EACLvB,KAAMsB,EAAKtB,KACXQ,SAAUc,EAAKd,SACfE,YAAaY,EAAKZ,YAClBD,OAAQa,EAAKb,OACbK,WAAYQ,EAAKR,WACjBH,UAAWW,EAAKX,iB,MCsFbc,MAxGf,WACE,IAAMC,EAAW,CACf,CACE1B,KAAMC,IACNO,SAAU,WACVC,OAAQ,OACRC,YAAa,YACbI,WAAY,WACZH,WAAW,GAEb,CACEX,KAAME,IACNM,SAAU,WACVC,OAAQ,OACRC,YAAa,YACbI,WAAY,WACZH,WAAW,GAEb,CACEX,KAAMG,IACNK,SAAU,eACVC,OAAQ,MACRC,YAAa,YACbI,WAAY,aACZH,WAAW,GAEb,CACEX,KAAMI,IACNI,SAAU,YACVC,OAAQ,OACRC,YAAa,cACbI,WAAY,YACZH,WAAW,IAITQ,EAAa,CACjB,CACEnB,KAAMC,IACNe,MAAO,aACPP,OAAQ,KACRK,WAAY,KACZH,WAAW,GAEb,CACEX,KAAMC,IACNe,MAAO,QACPP,OAAQ,KACRK,WAAY,KACZH,WAAW,GAEb,CACEX,KAAMG,IACNa,MAAO,QACPP,OAAQ,OACRK,WAAY,QACZH,WAAW,GAEb,CACEX,KAAMG,IACNa,MAAO,gBACPP,OAAQ,MACRK,WAAY,QACZH,WAAW,GAEb,CACEX,KAAME,IACNc,MAAO,WACPP,OAAQ,MACRK,WAAY,OACZH,WAAW,GAEb,CACEX,KAAME,IACNc,MAAO,QACPP,OAAQ,MACRK,WAAY,OACZH,WAAW,GAEb,CACEX,KAAMI,IACNY,MAAO,QACPP,OAAQ,MACRK,WAAY,MACZH,WAAW,GAEb,CACEX,KAAMI,IACNY,MAAO,cACPP,OAAQ,OACRK,WAAY,MACZH,WAAW,IAIf,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAS0B,MAAOM,IAChB,kBAAC,EAAD,CAASN,MAAOD,EAAYD,OAAO,mBAAmBC,YAAU,MChGlDQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8f416b8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-facebook.a7383764.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-twitter.810ccee8.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-instagram.991487fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-youtube.8499da12.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-down.69a5c77f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-up.95f916a5.svg\";","import React from \"react\";\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n  return (\r\n    <div className='banner'>\r\n      <div className=\"banner__info\">\r\n        <h1 className=\"banner__info--primary\">Social Media Dashboard</h1>\r\n        <h2 className=\"banner__info--secondary\">Total Followers: 23,004</h2>\r\n      </div>\r\n      <hr/>\r\n      <div className=\"banner__toggle\">\r\n        <label htmlFor=\"darkModeButton\">Dark Mode</label>\r\n        <div className=\"toggle__wrapper\">\r\n          <input id=\"darkModeButton\" className=\"toggle__button\" type=\"checkbox\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;","import React from \"react\";\r\nimport IconDown from '../assets/icon-down.svg';\r\nimport IconUp from '../assets/icon-up.svg';\r\nimport IconFacebook from \"../assets/icon-facebook.svg\";\r\nimport IconTwitter from \"../assets/icon-twitter.svg\";\r\nimport IconInstagram from \"../assets/icon-instagram.svg\";\r\nimport IconYoutube from \"../assets/icon-youtube.svg\";\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n  const getSocialMediaStyle = () => {\r\n    switch (props.icon) {\r\n      case IconFacebook:\r\n        return 'card--facebook';\r\n      case IconTwitter:\r\n        return 'card--twitter';\r\n      case IconInstagram:\r\n        return 'card--instagram ';\r\n      case IconYoutube:\r\n        return 'card--youtube';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`card ${getSocialMediaStyle()}`}>\r\n      <div className=\"card__title\">\r\n        <img src={props.icon} alt=\"\"/>\r\n        <span>{props.username}</span>\r\n      </div>\r\n      <div className=\"card__counter\">\r\n        <span className=\"counter__number\">{props.number}</span>\r\n        <span className=\"counter__description\">{props.description}</span>\r\n      </div>\r\n      <div className=\"card__stats\">\r\n        <img src={props.isSuccess ? IconUp : IconDown} alt=''/>\r\n        <span className={props.isSuccess ? 'card__stats--success' : 'card__stats--warning'}>{props.difference}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport IconUp from \"../assets/icon-up.svg\";\r\nimport IconDown from \"../assets/icon-down.svg\";\r\nimport './SmallCard.css';\r\n\r\nfunction SmallCard(props) {\r\n  return (\r\n    <div className=\"card card--small\">\r\n      <div className=\"card__row\">\r\n        <span className=\"card__title\">{props.title}</span>\r\n        <img src={props.icon} alt=\"\"/>\r\n      </div>\r\n      <div className=\"card__row\">\r\n        <span className=\"card__number\">{props.number}</span>\r\n        <div className=\"card__description\">\r\n          <img src={props.isSuccess ? IconUp : IconDown} alt=\"\"/>\r\n          <span className={props.isSuccess ? 'card__stats--success' : 'card__stats--warning'}>{props.difference}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SmallCard;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport SmallCard from \"./SmallCard\";\r\nimport './CardRow.css';\r\n\r\nfunction CardRow(props) {\r\n  return (\r\n    <div className='cardRow'>\r\n      <header className='cardRow__header'>{props.header}</header>\r\n      {props.smallCards ? props.cards.map((card, index) => (\r\n          <SmallCard\r\n            key={index}\r\n            icon={card.icon}\r\n            title={card.title}\r\n            number={card.number}\r\n            difference={card.difference}\r\n            isSuccess={card.isSuccess}\r\n          />\r\n        )) :\r\n        props.cards.map((card, index) => (\r\n          <Card\r\n            key={index}\r\n            icon={card.icon}\r\n            username={card.username}\r\n            description={card.description}\r\n            number={card.number}\r\n            difference={card.difference}\r\n            isSuccess={card.isSuccess}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardRow;","import React from 'react';\r\nimport Banner from \"./components/Banner\";\r\nimport CardRow from \"./components/CardRow\";\r\nimport './App.css';\r\nimport IconFacebook from \"./assets/icon-facebook.svg\";\r\nimport IconTwitter from \"./assets/icon-twitter.svg\";\r\nimport IconInstagram from \"./assets/icon-instagram.svg\";\r\nimport IconYoutube from \"./assets/icon-youtube.svg\";\r\n\r\nfunction App() {\r\n  const bigCards = [\r\n    {\r\n      icon: IconFacebook,\r\n      username: '@nathanf',\r\n      number: '1987',\r\n      description: 'followers',\r\n      difference: '12 today',\r\n      isSuccess: true\r\n    },\r\n    {\r\n      icon: IconTwitter,\r\n      username: '@nathanf',\r\n      number: '1044',\r\n      description: 'followers',\r\n      difference: '99 today',\r\n      isSuccess: true\r\n    },\r\n    {\r\n      icon: IconInstagram,\r\n      username: '@realnathanf',\r\n      number: '11k',\r\n      description: 'followers',\r\n      difference: '1099 today',\r\n      isSuccess: true\r\n    },\r\n    {\r\n      icon: IconYoutube,\r\n      username: 'Nathan F.',\r\n      number: '8239',\r\n      description: 'subscribers',\r\n      difference: '144 today',\r\n      isSuccess: false\r\n    }\r\n  ]\r\n\r\n  const smallCards = [\r\n    {\r\n      icon: IconFacebook,\r\n      title: 'Page Views',\r\n      number: '87',\r\n      difference: '3%',\r\n      isSuccess: true\r\n    },\r\n    {\r\n      icon: IconFacebook,\r\n      title: 'Likes',\r\n      number: '52',\r\n      difference: '2%',\r\n      isSuccess: false\r\n    },\r\n    {\r\n      icon: IconInstagram,\r\n      title: 'Likes',\r\n      number: '5462',\r\n      difference: '2257%',\r\n      isSuccess: true\r\n    },\r\n    {\r\n      icon: IconInstagram,\r\n      title: 'Profile Views',\r\n      number: '52k',\r\n      difference: '1375%',\r\n      isSuccess: true\r\n    },\r\n    {\r\n      icon: IconTwitter,\r\n      title: 'Retweets',\r\n      number: '117',\r\n      difference: '303%',\r\n      isSuccess: true\r\n    },\r\n    {\r\n      icon: IconTwitter,\r\n      title: 'Likes',\r\n      number: '507',\r\n      difference: '553%',\r\n      isSuccess: true\r\n    },\r\n    {\r\n      icon: IconYoutube,\r\n      title: 'Likes',\r\n      number: '107',\r\n      difference: '19%',\r\n      isSuccess: false\r\n    },\r\n    {\r\n      icon: IconYoutube,\r\n      title: 'Total Views',\r\n      number: '1407',\r\n      difference: '12%',\r\n      isSuccess: false\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className='app'>\r\n      <Banner/>\r\n      <CardRow cards={bigCards}/>\r\n      <CardRow cards={smallCards} header='Overview - Today' smallCards/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}